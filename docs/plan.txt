1. Make project review. 
2. Make hardware design description.
3. Make designe document for software modules and functions.
4. Create working plan of project.
5. Checking of working plan.


In accordance with DO178 should be created
System requerement like describing how system should work,what function should be implemented and what parameters
of system control should be reached explained by human language.

http://profs.etsmtl.ca/cfuhrman/publications/OpenUP_DO-178B.pdf

The intent is such that an overlap is between the HLR and the software design, as 
shown in Figure 1. In this regard, DO-178B states: 
“Software development processes produce one or more levels of software requirements. High-level requirements are 
produced directly through analysis of system requirements and system architecture. Usually, these high-level 
requirements are further developed during the software design process, thus producing one or more successive, lower 
levels of requirements. However, if Source Code is generated directly from high-level requirements, then the high-level 
requirements are also considered low-level requirements, and the guidelines for low-level requirements also apply.” 

in section 5 of DO-178B, it is stated: 
“The development of a software architecture involves decisions made about the structure of the software. During the 
software design process, the software architecture is defined and low-level requirements are developed. Low-level 
requirements are software requirements from which Source Code can be directly implemented without further 
information.” 
In its clarification on LLR in DO-178B, DO-248B states: 
“The aim of the architectural design is to break down the functions of the software requirements so that they can be 
regrouped into a logical software structure.” 



The software development process is broken into four sub-processes:
Software Requirements Process: -> High-level requirements in relation to function, performance, interface and safety.
Software Design Process:       -> Low-level requirements used to implement the source code.
Software Coding Process:       -> Production of source-code from the design process.
Integration Process:           -> Integration of code into a real-time environment.



System Requirement:
Developing software and hardware to control flight objects of quadrocopter family.

Hardware based on ARM Cortex M3 STM32F103CBT6, medium-density performance line ARM-based 32-bit MCU with 128 KB Flash, 20KB SRAM,
72 MHz, 1.25 DMIPS/MHz,(93 DMIPS),Single-cycle multiplication and hardware division.

Software should provide:
1. Position stabilisation during flight.
2. Collecting flight navigation data using GPS.
3. Autopilot using GPS.
4. Control of all additional systems( Battery state, external and internal temperature, air speed, pressure altityde (TODO: add if some else.))
5. Reseive conrtol signals from ground station.
6. Altitude stabilisation using BARO and/or ULTRASONIC methods.(ULTRASONIC not ready yet.???)
7. Software should alove to change flight object configuration, like type(tricopter, quadrocopter,octocopter...),set direction of motor rotation,
	static and dynamic characteristic of control system - cut off voltage, PID control parameters and so on (TODO: should be descrybed all listing.)
8. Sofrware should be devided by two part:  firmware of onboard system and ground control station GUI.
9. GUI should be connected to onboard part by Bluetooth or serial link. 
10.GUI should provide realtime data from onboard system during connection. 

Firmware should be developed in accordance with MISRA rules.

25.01.2014
Main init functions are done.
1.Should be finalising I2C acqusition function. Should be decided how to send data during one time I2C reading.
(Now it just copy to Gyro variable)
2.Clean DMA TX for Uart1. The RX interrupt should be added.	
	Should be added functions for RX round buffer. For parsing input command packets. 

03.02.2014
1. I2C acqusition function done. Data saving to global variables for raw data.
	Should be added normalising function for converting raw data to real float value in accordance with value dimmension(degr/sec, m/sec^2,H)
	And add filters. So, this function should completly prepare sensors data for processing algorithm.
2. DMA TX for Uart1 cleared. RX not ready yet. It will be postponded.
3. Check Acceleration sensor data. for 4g it has 11bits or +- 10bits on 16 bits, so it should be devided by 32 to get right value.

10.02.2014
Normalising done.
All work well. Gyro, Accel and Magnetometer.
Fixed communication with PC.
Added stab algorithm.

Next step milestones:
15.02.14	Check G+A stabilisation on PC.
			Check G+A stabilisation on Board.
16.02.14	Add PPM calibration protocol.
22.02.14    Add Magnetometr calibration protocol.
23.02.14	Check G+A+M stabilisation on PC.
			Check G+A+M stabilisation on Board.
02.03.14	Add PID coefficients to communication protocol.
			Add control loop PID.
08.03.14	Add filters for all input data from sensors.
			It can be done as part of normalising function.

14.04.2014
"15.02.14"	Check G+A stabilisation on PC.      DONE
			Check G+A stabilisation on Board.   DONE

After solving architecture problem was added RX functionality. 
RX was initiated to work through DMA. DMA work in cycle mode. 
And generate interrupt just to count DMA cycle. It "main frame" 
interrupt calling function to copy data from DMA buffer to UART 
round buffer and calling data processing function. Copy data from 
DMA buffer should be done from main frame interrupt to avoid loosing 
serial data. Developing of this architecture took one month. 

Was developed and adopted GUI for communication with board. 

21.04.2014 Add full functionality to read/write PID from/to board.





















